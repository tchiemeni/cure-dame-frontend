import { Routes } from '@angular/router';

// // Composants de la zone protÃ©gÃ©e :
import { HomeComponent } from './components/home/home'; // Fil d'actualitÃ©
// ðŸ”” Ajout du composant pour la requÃªte de discussion (Ã  crÃ©er)
import { DiscussionRequestComponent } from './components/discussion/discussion-request/discussion-request';
import { LoginComponent } from './components/auth/login/login';
import { RegisterComponent } from './components/auth/register/register';
import { NavigationComponent } from './navigation/navigation.component';
import { authGuard } from './guards/auth-guard';
import { RequestAdminComponent } from './admin/request-admin/request-admin';
import { adminGuard } from './guards/admin-guard';

export const routes: Routes = [
  // 1. Routes publiques (accessibles sans Ãªtre connectÃ©)
  { path: 'login', component: LoginComponent },
  { path: 'register', component: RegisterComponent },


  //2. Route principale avec Navigation et zones protÃ©gÃ©es
  {
    path: '',
    component: NavigationComponent,
    canActivate: [authGuard], // Le guard protÃ¨ge toutes les routes enfants
    children: [
      { path: 'home', component: HomeComponent }, // Fil d'actualitÃ©

      // ðŸ”” AJOUT DE LA ROUTE POUR LE FORMULAIRE DE DISCUSSION/REQUÃŠTE
      { path: 'request', component: DiscussionRequestComponent },

       // ðŸš¨ ROUTE ADMINISTRATEUR PROTÃ‰GÃ‰E ðŸš¨
      {
        path: 'admin/requests',
        component: RequestAdminComponent,
        canActivate: [adminGuard] // ðŸ‘ˆ Le Guard applique la vÃ©rification de permission ici
      },

      // Redirection par dÃ©faut vers 'home'
      { path: '', redirectTo: 'home', pathMatch: 'full' },
    ]
  },

  // 3. Route de rattrapage (Wildcard)
  // Rediriger vers '/home' par dÃ©faut si la route n'existe pas
  { path: '**', redirectTo: 'home' }
];
