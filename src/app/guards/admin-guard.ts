import { inject } from '@angular/core';
import { CanActivateFn, Router } from '@angular/router';
import { map, take } from 'rxjs/operators';
import { AuthService } from '../services/auth';

export const adminGuard: CanActivateFn = (route, state) => {
  const authService = inject(AuthService);
  const router = inject(Router);

  // Supposons que votre AuthService expose un Observable de l'utilisateur ou de son rÃ´le.
  return authService.currentUserRole$.pipe(
    take(1), // Prend la derniÃ¨re valeur et complÃ¨te
    map(role => {

      // Si le rÃ´le est null (pas connectÃ©), on redirige.
      if (!role) {
         return router.createUrlTree(['/login']);
      }
      // ğŸš¨ Logique de vÃ©rification du rÃ´le ğŸš¨
      const isAdmin = role === 'admin' || role === 'homme_de_dieu';

      if (isAdmin) {
        return true; // AccÃ¨s autorisÃ©
      } else {
        // Redirection vers la page d'accueil si l'utilisateur n'est pas admin
        alert('AccÃ¨s refusÃ©. Vous devez Ãªtre administrateur.');
        return router.createUrlTree(['/home']);
      }
    })
  );
};
